<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <!-- Manager -->
        <service id="dizda_app.manager.address" class="Dizda\Bundle\AppBundle\Manager\AddressManager">
            <argument type="service" id="doctrine.orm.default_entity_manager" />
            <argument type="service" id="logger" />
            <argument type="service" id="event_dispatcher" />
            <argument type="service" id="dizda_app.service.address" />
        </service>

        <service id="dizda_app.manager.withdraw" class="Dizda\Bundle\AppBundle\Manager\WithdrawManager">
            <argument type="service" id="doctrine.orm.default_entity_manager" />
            <argument type="service" id="logger" />
            <argument type="service" id="event_dispatcher" />
        </service>

        <service id="dizda_app.manager.deposit" class="Dizda\Bundle\AppBundle\Manager\DepositManager">
            <argument type="service" id="doctrine.orm.default_entity_manager" />
            <argument type="service" id="logger" />
            <argument type="service" id="event_dispatcher" />
            <argument type="service" id="dizda_app.manager.address" />
            <argument type="service" id="dizda_app.service.http" />
        </service>

        <service id="dizda_app.manager.withdraw_output" class="Dizda\Bundle\AppBundle\Manager\WithdrawOutputManager">
            <argument type="service" id="doctrine.orm.default_entity_manager" />
            <argument type="service" id="logger" />
            <argument type="service" id="event_dispatcher" />
        </service>

        <!-- Listener -->
        <service id="dizda_app.listener.address_transaction" class="Dizda\Bundle\AppBundle\EventListener\TransactionListener">
            <tag name="kernel.event_listener" event="app.address_transaction_create" method="onCreate" />
        </service>

        <service id="dizda_app.listener.deposit" class="Dizda\Bundle\AppBundle\EventListener\DepositListener">
            <tag name="kernel.event_listener" event="app.deposit_updated" method="onUpdate" />
            <argument type="service" id="logger" />
            <argument type="service" id="doctrine.orm.default_entity_manager" />
        </service>

        <service id="dizda_app.listener.withdraw" class="Dizda\Bundle\AppBundle\EventListener\WithdrawListener">
            <tag name="kernel.event_listener" event="app.withdraw_create" method="onCreate" />
            <tag name="kernel.event_listener" event="app.withdraw_send" method="onSend" />
            <argument type="service" id="logger" />
            <argument type="service" id="dizda_app.manager.address" />
            <argument type="service" id="dizda_app.service.bitcore" />
            <argument type="service" id="old_sound_rabbit_mq.withdraw_callback_producer" />
        </service>

        <service id="dizda_app.listener.request" class="Dizda\Bundle\AppBundle\EventListener\RequestListener">
            <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" />
            <argument type="service" id="security.token_storage" />
        </service>

        <service id="dizda_app.listener.range_header" class="Dizda\Bundle\AppBundle\EventListener\RangeHeaderListener">
            <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" />
        </service>

        <!-- Doctrine EventListener -->
        <service id="dizda_app.listener.deposit_entity" class="Dizda\Bundle\AppBundle\EventListener\DepositEntityListener">
            <tag name="doctrine.event_listener" event="postUpdate" />
            <argument type="service" id="old_sound_rabbit_mq.deposit_callback_producer" />
        </service>

        <service id="dizda_app.listener.deposit_topup_entity" class="Dizda\Bundle\AppBundle\EventListener\DepositTopupEntityListener">
            <tag name="doctrine.event_listener" event="postPersist" />
            <argument type="service" id="old_sound_rabbit_mq.deposit_topup_callback_producer" />
        </service>

        <service id="dizda_app.listener.withdraw_entity" class="Dizda\Bundle\AppBundle\EventListener\WithdrawEntityListener">
            <tag name="doctrine.event_listener" event="postUpdate" />
            <argument type="service" id="old_sound_rabbit_mq.withdraw_output_callback_producer" />
        </service>

        <!-- Consumer -->
        <service id="dizda_app.consumer.callback" class="Dizda\Bundle\AppBundle\Consumer\CallbackConsumer">
            <argument type="service" id="doctrine.orm.default_entity_manager" />
            <argument type="service" id="dizda_app.service.callback" />
        </service>

        <!-- Repositories -->
        <service id="dizda_app.repository.application" class="Doctrine\ORM\EntityRepository" factory-service="doctrine" factory-method="getRepository">
            <argument>DizdaAppBundle:Application</argument>
        </service>

        <!-- Security -->
        <service id="dizda_app.security.application_user_provider" class="Dizda\Bundle\AppBundle\Security\User\ApplicationUserProvider">
            <argument type="service" id="dizda_app.repository.application"  />
        </service>

        <!-- Services -->
        <service id="dizda_app.service.http" class="Dizda\Bundle\AppBundle\Service\HttpService"></service>

        <service id="dizda_app.service.callback" class="Dizda\Bundle\AppBundle\Service\CallbackService">
            <argument type="service" id="jms_serializer" />
            <argument type="service" id="dizda_app.service.http" />
        </service>

        <service id="dizda_app.service.address" class="Dizda\Bundle\AppBundle\Service\AddressService">
            <argument type="service" id="serializer" />
            <argument type="service" id="logger" />
            <argument>%kernel.root_dir%/../</argument>
            <argument>%nodejs_path%</argument>
        </service>

        <service id="dizda_app.service.bitcore" class="Dizda\Bundle\AppBundle\Service\BitcoreService">
            <argument type="service" id="serializer" />
            <argument type="service" id="logger" />
            <argument>%kernel.root_dir%/../</argument>
            <argument>%nodejs_path%</argument>
        </service>
    </services>
</container>

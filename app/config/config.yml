imports:
    - { resource: parameters.yml }
    - { resource: security.yml }

framework:
    #esi:             ~
    #translator:      { fallback: "%locale%" }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

sensio_framework_extra:
    view:    { annotations: false }
    router:  { annotations: true }
    request: { converters: true }

jms_serializer:
    metadata:
        auto_detection: true

# FOS Rest
fos_rest:
    format_listener:
        rules:
            - { path: '^/api', priorities: ['json'], fallback_format: json, prefer_extension: false }
            - { path: '^/', priorities: ['json'], fallback_format: json, prefer_extension: false }
    view:
        view_response_listener: 'force'
        formats:
            json: true
            xml:  false
        templating_formats:
            html: false
    routing_loader:
        default_format: json
    param_fetcher_listener: true
    body_listener: true
    access_denied_listener:
        json: true

bitcoind:
    schema:               %bitcoind_schema%
    username:             %bitcoind_username%
    password:             %bitcoind_password%
    host:                 %bitcoind_host%
    port:                 %bitcoind_port%

dizda_blockchain:
    provider: insight
    endpoint: %api_endpoint%

old_sound_rabbit_mq:
    connections:
        default:
            host:     localhost
            port:     5672
            user:     guest
            password: guest
            vhost:    '/'
            lazy:     true
    producers:
        deposit:
            connection:       default
            exchange_options: { name: deposit, type: direct }
        deposit_topup:
            connection:       default
            exchange_options: { name: deposit-topup, type: direct }
        withdraw_output_callback:
            connection:       default
            exchange_options: { name: withdraw-output-callback, type: direct }

    consumers:
        deposit:
            connection:       default
            exchange_options: { name: deposit, type: direct }
            queue_options:    { name: deposit }
            callback:         dizda_app.consumer.deposit
        deposit_topup:
            connection:       default
            exchange_options: { name: deposit-topup, type: direct }
            queue_options:    { name: deposit-topup }
            callback:         dizda_app.consumer.deposit_topup
        withdraw_output_callback:
            connection:       default
            exchange_options: { name: withdraw-output-callback, type: direct }
            queue_options:    { name: withdraw-output-callback }
            callback:         dizda_app.consumer.withdraw_output_callback

fos_user:
    db_driver: orm
    firewall_name: login
    user_class: Dizda\Bundle\UserBundle\Entity\User

# Angular Authentification
lexik_jwt_authentication:
    private_key_path: %kernel.root_dir%/var/jwt/private.pem   # ssh private key path
    public_key_path:  %kernel.root_dir%/var/jwt/public.pem    # ssh public key path
    pass_phrase:      'bambou'                                # ssh key pass phrase
    token_ttl:        86400                                   # token ttl - defaults to 86400